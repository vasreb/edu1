{"version":3,"sources":["components/Profile/Profile.jsx","actions/fetchProfile.js"],"names":["ProfileList","styled","ul","_templateObject","ProfileWrapper","div","_templateObject2","ProfileError","h2","_templateObject3","Profile","errorHandle","error","message","react_default","a","createElement","this","props","load","_this$props$user","user","city","languages","social","_this$props","isLoading","isError","bundle_default","count","map","lang","key","soc","label","link","e","Component","connect","state","_state$profile","profile","dispatch","stateProps","dispatchProps","ownProps","match","Object","objectSpread","id","params","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","type","GET_PROFILE_REQUEST","fetch","concat","sent","json","status","GET_PROFILE_SUCCESS","payload","data","Error","t0","GET_PROFILE_ERROR","stop","_x","apply","arguments"],"mappings":"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","file":"static/js/7.1cee7942.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport fetchProfile from './../../actions/fetchProfile'\r\nimport styled from 'styled-components'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileList = styled.ul`\r\n\tmargin: 0;\r\n\tbackground-color: #e8e9ea;\r\n`\r\nconst ProfileWrapper = styled.div`\r\n\twidth: 50%;\r\n\tmargin: 0 auto;\r\n\tborder-radius: 5px;\r\n\tborder: 2px solid #e8eeee;\r\n\tbox-shadow: 0px 0px 22px -20px black;\r\n\tmargin-top: 10px;\r\n\tword-break: break-all;\r\n`\r\nconst ProfileError = styled.h2`\r\n\tfont-family: Verdana, Geneva, Tahoma, sans-serif;\r\n\tfont-size: 15px;\r\n\tmargin: 5px 0px;\r\n`\r\n\r\nclass Profile extends Component {\r\n\tstatic propTypes = {\r\n\t\tprofile: PropTypes.shape({\r\n\t\t\tcity: PropTypes.string,\r\n\t\t\tlanguages: PropTypes.arrayOf(PropTypes.string),\r\n\t\t\tsocial: PropTypes.arrayOf(\r\n\t\t\t\tPropTypes.shape({\r\n\t\t\t\t\tlabel: PropTypes.string,\r\n\t\t\t\t\tlink: PropTypes.string,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t}),\r\n\t\terror: PropTypes.shape({\r\n\t\t\tisError: PropTypes.bool.isRequired,\r\n\t\t\tmessage: PropTypes.string,\r\n\t\t}).isRequired,\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.load()\r\n\t}\r\n\r\n\terrorHandle = error => {\r\n\t\tswitch (error.message) {\r\n\t\t\tcase 'user_not_found':\r\n\t\t\t\treturn <ProfileError>User not found</ProfileError>\r\n\t\t\tcase 'wrong_user_data':\r\n\t\t\t\treturn <ProfileError>Wrong user data</ProfileError>\r\n\t\t\tdefault:\r\n\t\t\t\treturn <h2>Error: {error.message}</h2>\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { city, languages, social } = this.props.user\r\n\t\tconst { error, isLoading } = this.props\r\n\r\n\t\tif (error.isError) {\r\n\t\t\treturn this.errorHandle(error)\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (isLoading) {\r\n\t\t\t\tcity = <Skeleton />\r\n\t\t\t\tlanguages = <Skeleton count={2} />\r\n\t\t\t\tsocial = <Skeleton count={6} />\r\n\t\t\t} else {\r\n\t\t\t\tlanguages = languages.map(lang => <li key={lang}>{lang}</li>)\r\n\t\t\t\tsocial = social.map(soc => (\r\n\t\t\t\t\t<li key={soc.label}>\r\n\t\t\t\t\t\t{soc.label} <br /> {soc.link}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.errorHandle({ error: true, message: 'wrong_user_data' })\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<ProfileWrapper>\r\n\t\t\t\t<ProfileList>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\tCity: <span>{city}</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\tLanguages: <ul>{languages}</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\tSocials: <ul>{social}</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ProfileList>\r\n\t\t\t</ProfileWrapper>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\tconst { error, isLoading, user } = state.profile\r\n\r\n\treturn {\r\n\t\terror,\r\n\t\tisLoading,\r\n\t\tuser,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tdispatch,\r\n\t}\r\n}\r\n\r\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\r\n\tconst { dispatch } = dispatchProps\r\n\tconst { match } = ownProps\r\n\tconst load = () => {\r\n\t\tdispatch(fetchProfile(match.params.id))\r\n\t}\r\n\treturn {\r\n\t\tload,\r\n\t\t...stateProps,\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps,\r\n\tmergeProps\r\n)(Profile)\r\n","import {\r\n\tGET_PROFILE_REQUEST,\r\n\tGET_PROFILE_SUCCESS,\r\n\tGET_PROFILE_ERROR,\r\n} from './../constants/constants'\r\n\r\nexport default function fetchProfile(id) {\r\n\treturn async dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_PROFILE_REQUEST,\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tlet res = await fetch(\r\n\t\t\t\t`https://mysterious-reef-29460.herokuapp.com/api/v1/user-info/${id}`\r\n\t\t\t)\r\n\t\t\tres = await res.json()\r\n\t\t\tif (res.status === 'ok') {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: GET_PROFILE_SUCCESS,\r\n\t\t\t\t\tpayload: res.data,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(res.message)\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROFILE_ERROR,\r\n\t\t\t\tpayload: err.message,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}