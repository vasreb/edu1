{"version":3,"sources":["components/Profile/Profile.jsx","actions/fetchProfile.js"],"names":["ProfileList","styled","ul","_templateObject","ProfileWrapper","div","_templateObject2","ProfileError","h2","_templateObject3","Profile","errorHandle","isError","payload","react_default","a","createElement","this","props","load","_this$props$profile","profile","city","languages","social","_this$props","isLoading","error","bundle_default","count","map","lang","key","soc","label","link","e","Component","connect","state","profileIsError","profileIsLoading","dispatch","stateProps","dispatchProps","ownProps","match","Object","objectSpread","id","params","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","type","GET_PROFILE_REQUEST","fetch","concat","sent","json","status","GET_PROFILE_SUCCESS","data","Error","message","t0","GET_PROFILE_ERROR","stop","_x","apply","arguments"],"mappings":"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","file":"static/js/7.7f27dd00.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport fetchProfile from './../../actions/fetchProfile'\r\nimport styled from 'styled-components'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileList = styled.ul`\r\n\tmargin: 0;\r\n\tbackground-color: #e8e9ea;\r\n`\r\nconst ProfileWrapper = styled.div`\r\n\twidth: 50%;\r\n\tmargin: 0 auto;\r\n\tborder-radius: 5px;\r\n\tborder: 2px solid #e8eeee;\r\n\tbox-shadow: 0px 0px 22px -20px black;\r\n\tmargin-top: 10px;\r\n`\r\nconst ProfileError = styled.h2`\r\n\tfont-family: Verdana, Geneva, Tahoma, sans-serif;\r\n\tfont-size: 15px;\r\n\tmargin: 5px 0px;\r\n`\r\n\r\nclass Profile extends Component {\r\n\tstatic propTypes = {\r\n\t\tprofile: PropTypes.shape({\r\n\t\t\tcity: PropTypes.string,\r\n\t\t\tlanguages: PropTypes.arrayOf(PropTypes.string),\r\n\t\t\tsocial: PropTypes.arrayOf(\r\n\t\t\t\tPropTypes.shape({\r\n\t\t\t\t\tlabel: PropTypes.string,\r\n\t\t\t\t\tlink: PropTypes.string,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t}),\r\n\t\tisError: PropTypes.shape({\r\n\t\t\terror: PropTypes.bool.isRequired,\r\n\t\t\tpayload: PropTypes.string,\r\n\t\t}).isRequired,\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.load()\r\n\t}\r\n\r\n\terrorHandle = isError => {\r\n\t\tswitch (isError.payload) {\r\n\t\t\tcase 'user_not_found':\r\n\t\t\t\treturn <ProfileError>User not found</ProfileError>\r\n\t\t\tcase 'wrong_user_data':\r\n\t\t\t\treturn <ProfileError>Wrong user data</ProfileError>\r\n\t\t\tdefault:\r\n\t\t\t\treturn <h2>Error: {isError.payload}</h2>\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet { city, languages, social } = this.props.profile\r\n\t\tconst { isError, isLoading } = this.props\r\n\r\n\t\tif (isError.error) {\r\n\t\t\treturn this.errorHandle(isError)\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tif (isLoading) {\r\n\t\t\t\tcity = <Skeleton />\r\n\t\t\t\tlanguages = <Skeleton count={2} />\r\n\t\t\t\tsocial = <Skeleton count={6} />\r\n\t\t\t} else {\r\n\t\t\t\tlanguages = languages.map(lang => <li key={lang}>{lang}</li>)\r\n\t\t\t\tsocial = social.map(soc => (\r\n\t\t\t\t\t<li key={soc.label}>\r\n\t\t\t\t\t\t{soc.label} <br /> {soc.link}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tthis.errorHandle({ error: true, payload: 'wrong_user_data' })\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<ProfileWrapper>\r\n\t\t\t\t<ProfileList>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\tCity: <span>{city}</span>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\tLanguages: <ul>{languages}</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\tSocials: <ul>{social}</ul>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ProfileList>\r\n\t\t\t</ProfileWrapper>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\tconst {\r\n\t\tprofileIsError: isError,\r\n\t\tprofileIsLoading: isLoading,\r\n\t\tprofile,\r\n\t} = state\r\n\r\n\treturn {\r\n\t\tprofile,\r\n\t\tisError,\r\n\t\tisLoading,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tdispatch,\r\n\t}\r\n}\r\n\r\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\r\n\tconst { dispatch } = dispatchProps\r\n\tconst { match } = ownProps\r\n\tconst load = () => {\r\n\t\tdispatch(fetchProfile(match.params.id))\r\n\t}\r\n\treturn {\r\n\t\tload,\r\n\t\t...stateProps,\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps,\r\n\tmergeProps\r\n)(Profile)\r\n","import {\r\n    GET_PROFILE_REQUEST, \r\n    GET_PROFILE_SUCCESS, \r\n    GET_PROFILE_ERROR\r\n} from './../constants/constants';\r\n\r\nexport default function fetchProfile(id) {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: GET_PROFILE_REQUEST\r\n        })\r\n        try {\r\n            let res = await fetch(`https://mysterious-reef-29460.herokuapp.com/api/v1/user-info/${id}`)\r\n            res = await res.json();\r\n            if (res.status === 'ok') {\r\n                dispatch({\r\n                    type: GET_PROFILE_SUCCESS,\r\n                    payload: res.data\r\n                })\r\n            } else {\r\n                throw new Error(res.message)\r\n            }\r\n        }   \r\n        catch (err) {\r\n            dispatch({\r\n                type: GET_PROFILE_ERROR,\r\n                payload: err.message,\r\n            })\r\n        }\r\n    }\r\n}"],"sourceRoot":""}