{"version":3,"sources":["components/Profile/Profile.jsx","actions/fetchProfile.js"],"names":["ProfileList","styled","ul","_templateObject","ProfileWrapper","div","_templateObject2","ProfileError","h2","_templateObject3","connect","state","_state$profile","profile","error","isLoading","user","dispatch","stateProps","dispatchProps","ownProps","match","Object","objectSpread","load","id","params","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","type","GET_PROFILE_REQUEST","fetch","concat","sent","json","status","GET_PROFILE_SUCCESS","payload","data","Error","message","t0","GET_PROFILE_ERROR","stop","_x","apply","this","arguments","props","useEffect","errorHandle","react_default","createElement","_props$user","city","languages","social","isError","bundle_default","count","map","lang","key","soc","label","link","e"],"mappings":"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","file":"static/js/7.6bbf4f59.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport fetchProfile from './../../actions/fetchProfile'\r\nimport styled from 'styled-components'\r\nimport Skeleton from 'react-loading-skeleton'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProfileList = styled.ul`\r\n\tmargin: 0;\r\n\tbackground-color: #e8e9ea;\r\n`\r\nconst ProfileWrapper = styled.div`\r\n\twidth: 50%;\r\n\tmargin: 0 auto;\r\n\tborder-radius: 5px;\r\n\tborder: 2px solid #e8eeee;\r\n\tbox-shadow: 0px 0px 22px -20px black;\r\n\tmargin-top: 10px;\r\n\tword-break: break-all;\r\n`\r\nconst ProfileError = styled.h2`\r\n\tfont-family: Verdana, Geneva, Tahoma, sans-serif;\r\n\tfont-size: 15px;\r\n\tmargin: 5px 0px;\r\n`\r\nProfile.propTypes = {\r\n\tprofile: PropTypes.shape({\r\n\t\tcity: PropTypes.string,\r\n\t\tlanguages: PropTypes.arrayOf(PropTypes.string),\r\n\t\tsocial: PropTypes.arrayOf(\r\n\t\t\tPropTypes.shape({\r\n\t\t\t\tlabel: PropTypes.string,\r\n\t\t\t\tlink: PropTypes.string,\r\n\t\t\t})\r\n\t\t),\r\n\t}),\r\n\terror: PropTypes.shape({\r\n\t\tisError: PropTypes.bool.isRequired,\r\n\t\tmessage: PropTypes.string,\r\n\t}).isRequired,\r\n}\r\n\r\nfunction Profile(props) {\r\n\tuseEffect(props.load, [])\r\n\r\n\tconst errorHandle = error => {\r\n\t\tswitch (error.message) {\r\n\t\t\tcase 'user_not_found':\r\n\t\t\t\treturn <ProfileError>User not found</ProfileError>\r\n\t\t\tcase 'wrong_user_data':\r\n\t\t\t\treturn <ProfileError>Wrong user data</ProfileError>\r\n\t\t\tdefault:\r\n\t\t\t\treturn <h2>Error: {error.message}</h2>\r\n\t\t}\r\n\t}\r\n\r\n\tlet { city, languages, social } = props.user\r\n\tconst { error, isLoading } = props\r\n\r\n\tif (error.isError) {\r\n\t\treturn errorHandle(error)\r\n\t}\r\n\ttry {\r\n\t\tif (isLoading) {\r\n\t\t\tcity = <Skeleton />\r\n\t\t\tlanguages = <Skeleton count={2} />\r\n\t\t\tsocial = <Skeleton count={6} />\r\n\t\t} else {\r\n\t\t\tlanguages = languages.map(lang => <li key={lang}>{lang}</li>)\r\n\t\t\tsocial = social.map(soc => (\r\n\t\t\t\t<li key={soc.label}>\r\n\t\t\t\t\t{soc.label} <br /> {soc.link}\r\n\t\t\t\t</li>\r\n\t\t\t))\r\n\t\t}\r\n\t} catch (e) {\r\n\t\terrorHandle({ error: true, message: 'wrong_user_data' })\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ProfileWrapper>\r\n\t\t\t<ProfileList>\r\n\t\t\t\t<li>\r\n\t\t\t\t\tCity: <span>{city}</span>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\tLanguages: <ul>{languages}</ul>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\tSocials: <ul>{social}</ul>\r\n\t\t\t\t</li>\r\n\t\t\t</ProfileList>\r\n\t\t</ProfileWrapper>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\tconst { error, isLoading, user } = state.profile\r\n\r\n\treturn {\r\n\t\terror,\r\n\t\tisLoading,\r\n\t\tuser,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tdispatch,\r\n\t}\r\n}\r\n\r\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\r\n\tconst { dispatch } = dispatchProps\r\n\tconst { match } = ownProps\r\n\tconst load = () => {\r\n\t\tdispatch(fetchProfile(match.params.id))\r\n\t}\r\n\treturn {\r\n\t\tload,\r\n\t\t...stateProps,\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps,\r\n\tmergeProps\r\n)(Profile)\r\n","import {\r\n\tGET_PROFILE_REQUEST,\r\n\tGET_PROFILE_SUCCESS,\r\n\tGET_PROFILE_ERROR,\r\n} from './../constants/constants'\r\n\r\nexport default function fetchProfile(id) {\r\n\treturn async dispatch => {\r\n\t\tdispatch({\r\n\t\t\ttype: GET_PROFILE_REQUEST,\r\n\t\t})\r\n\t\ttry {\r\n\t\t\tlet res = await fetch(\r\n\t\t\t\t`https://mysterious-reef-29460.herokuapp.com/api/v1/user-info/${id}`\r\n\t\t\t)\r\n\t\t\tres = await res.json()\r\n\t\t\tif (res.status === 'ok') {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: GET_PROFILE_SUCCESS,\r\n\t\t\t\t\tpayload: res.data,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(res.message)\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_PROFILE_ERROR,\r\n\t\t\t\tpayload: err.message,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}