{"version":3,"sources":["actions/loginRequest.js","components/Login/Login.jsx"],"names":["loginRequest","state","email","password","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","type","POST_LOGIN_ERROR","payload","abrupt","POST_LOGIN_REQUEST","axios","post","then","res","console","log","data","status","Error","message","POST_LOGIN_SUCCESS","catch","err","stop","_x","apply","this","arguments","LoginWrapper","styled","div","_templateObject","LoginForm","form","_templateObject2","LoginError","_templateObject3","Login","handleInputChange","e","_e$target","target","name","value","_this","setState","defineProperty","errorHandle","error","react_default","createElement","_this2","_this$props","props","login","isLogin","react_router","to","concat","id","onSubmit","preventDefault","handleSubmit","className","onChange","isError","Component","connect","_state$login","stateProps","dispatchProps","ownProps","objectSpread"],"mappings":"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","file":"static/js/6.499dba4a.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n    POST_LOGIN_REQUEST, \r\n    POST_LOGIN_SUCCESS, \r\n    POST_LOGIN_ERROR\r\n} from './../constants/constants';\r\n\r\nconst loginRequest = (state) => {\r\n    const {email, password} = state;\r\n    return async dispatch => {\r\n\r\n\r\n        //sync validate\r\n\r\n        if (!email) {\r\n            dispatch({\r\n                type: POST_LOGIN_ERROR,\r\n                payload: 'sync_email_undefined'\r\n            })\r\n            return\r\n        }\r\n        if (!password) {\r\n            dispatch({\r\n                type: POST_LOGIN_ERROR,\r\n                payload: 'sync_password_undefined'\r\n            })\r\n            return\r\n        }\r\n\r\n        //async\r\n\r\n        dispatch({\r\n            type: POST_LOGIN_REQUEST\r\n        })\r\n        axios.post('https://mysterious-reef-29460.herokuapp.com/api/v1/validate', {\r\n            email,\r\n            password\r\n        })\r\n        .then((res) => {\r\n                console.log(res);\r\n                if (res.data.status === \"ok\") {\r\n                    dispatch({\r\n                        type: POST_LOGIN_SUCCESS,\r\n                        payload: res.data.data\r\n                    })\r\n                }\r\n                else throw new Error(res.data.message)\r\n        })\r\n        .catch((err) => dispatch({\r\n            type: POST_LOGIN_ERROR,\r\n            payload: err.message\r\n        }));\r\n    }\r\n}\r\n\r\nexport default loginRequest;","import React from 'react'\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport loginRequest from './../../actions/loginRequest'\r\nimport { Redirect } from 'react-router'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginWrapper = styled.div`\r\n\tmargin: 200px auto;\r\n\tdisplay: inline-flex;\r\n\tflex-direction: column;\r\n\tpadding: 10px;\r\n\tbackground-color: #e8e9ea;\r\n\tbox-shadow: 0px 0px 22px -20px black;\r\n`\r\nconst LoginForm = styled.form`\r\n\tmargin: auto;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`\r\nconst LoginError = styled.div`\r\n\tfont-family: Verdana, Geneva, Tahoma, sans-serif;\r\n\tfont-size: 15px;\r\n\tmargin: 5px 0px;\r\n`\r\n\r\nclass Login extends Component {\r\n\tstate = {}\r\n\r\n\tstatic propTypes = {\r\n\t\tisError: PropTypes.shape({\r\n\t\t\terror: PropTypes.bool.isRequired,\r\n\t\t\tpayload: PropTypes.string,\r\n\t\t}),\r\n\t\tlogin: PropTypes.shape({\r\n\t\t\tisLogin: PropTypes.bool.isRequired,\r\n\t\t\tid: PropTypes.number,\r\n\t\t}),\r\n\t\thandleSubmit: PropTypes.func.isRequired,\r\n\t}\r\n\r\n\thandleInputChange = e => {\r\n\t\tconst { name, value } = e.target\r\n\t\tthis.setState({\r\n\t\t\t[name]: value,\r\n\t\t})\r\n\t}\r\n\r\n\terrorHandle = error => {\r\n\t\tswitch (error.message) {\r\n\t\t\tcase 'sync_email_undefined':\r\n\t\t\t\treturn <LoginError>Enter email!</LoginError>\r\n\t\t\tcase 'sync_password_undefined':\r\n\t\t\t\treturn <LoginError>Enter password!</LoginError>\r\n\t\t\tcase 'wrong_email_or_password':\r\n\t\t\t\treturn <LoginError>Wrong email or password.</LoginError>\r\n\t\t\tdefault:\r\n\t\t\t\treturn <LoginError>Error: {error.message}</LoginError>\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { error, login } = this.props\r\n\t\tif (login.isLogin) {\r\n\t\t\treturn <Redirect to={`/profile/${login.id}`} />\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<LoginWrapper\r\n\t\t\t\tonSubmit={e => {\r\n\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\tthis.props.handleSubmit(this.state)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<LoginForm className=\"login-form\">\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tEmail <br />\r\n\t\t\t\t\t\t<input name=\"email\" type=\"text\" onChange={this.handleInputChange} />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tPassword <br />\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button type=\"submit\">Sign in</button>\r\n\t\t\t\t</LoginForm>\r\n\t\t\t\t{error.isError ? this.errorHandle(error) : null}\r\n\t\t\t</LoginWrapper>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tdispatch,\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\tconst { error, login } = state.login\r\n\treturn {\r\n\t\tlogin,\r\n\t\terror,\r\n\t}\r\n}\r\n\r\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\r\n\tconst handleSubmit = state => {\r\n\t\tdispatchProps.dispatch(loginRequest(state))\r\n\t}\r\n\treturn {\r\n\t\t...stateProps,\r\n\t\t...ownProps,\r\n\t\thandleSubmit,\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps,\r\n\tmergeProps\r\n)(Login)\r\n"],"sourceRoot":""}