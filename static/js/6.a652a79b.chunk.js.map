{"version":3,"sources":["actions/loginRequest.js","components/Login/Login.jsx"],"names":["loginRequest","state","email","password","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","type","POST_LOGIN_ERROR","payload","abrupt","POST_LOGIN_REQUEST","axios","post","then","res","console","log","data","status","Error","message","POST_LOGIN_SUCCESS","catch","err","stop","_x","apply","this","arguments","LoginWrapper","styled","div","_templateObject","LoginForm","form","_templateObject2","LoginError","_templateObject3","Login","handleInputChange","e","_e$target","target","name","value","_this","setState","defineProperty","errorHandle","isError","error","react_default","createElement","_this2","_this$props","props","login","isLogin","react_router","to","concat","id","onSubmit","preventDefault","className","onChange","Component","connect","loginIsError"],"mappings":"oOAwDeA,EAhDM,SAACC,GAAU,IACrBC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,SACd,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAKEb,EALF,CAAAW,EAAAE,KAAA,eAMCJ,EAAS,CACLK,KAAMC,IACNC,QAAS,yBARdL,EAAAM,OAAA,oBAYEhB,EAZF,CAAAU,EAAAE,KAAA,eAaCJ,EAAS,CACLK,KAAMC,IACNC,QAAS,4BAfdL,EAAAM,OAAA,iBAsBHR,EAAS,CACLK,KAAMI,MAEVC,IAAMC,KAAK,8DAA+D,CACtEpB,QACAC,aAEHoB,KAAK,SAACC,GAEC,GADAC,QAAQC,IAAIF,GACY,OAApBA,EAAIG,KAAKC,OAMR,MAAM,IAAIC,MAAML,EAAIG,KAAKG,SAL1BnB,EAAS,CACLK,KAAMe,IACNb,QAASM,EAAIG,KAAKA,SAKjCK,MAAM,SAACC,GAAD,OAAStB,EAAS,CACrBK,KAAMC,IACNC,QAASe,EAAIH,YAzCd,wBAAAjB,EAAAqB,SAAAxB,MAAP,gBAAAyB,GAAA,OAAA/B,EAAAgC,MAAAC,KAAAC,YAAA,8iBCHJ,IAAMC,EAAeC,IAAOC,IAAVC,KAQZC,EAAYH,IAAOI,KAAVC,KAKTC,EAAaN,IAAOC,IAAVM,KAMVC,6MACF/C,MAAQ,KAIRgD,kBAAoB,SAACC,GAAM,IAAAC,EACDD,EAAEE,OAAjBC,EADgBF,EAChBE,KAAMC,EADUH,EACVG,MAChBC,EAAKC,SAALnD,OAAAoD,EAAA,EAAApD,CAAA,GACGgD,EAAOC,OAIXI,YAAc,SAACC,GACX,IAAKA,EAAQC,MAAO,MAAO,GAE3B,OAAQD,EAAQzC,SACZ,IAAK,uBACD,OAAO2C,EAAArD,EAAAsD,cAAChB,EAAD,qBACX,IAAK,0BACD,OAAOe,EAAArD,EAAAsD,cAAChB,EAAD,wBACX,IAAK,0BACG,OAAOe,EAAArD,EAAAsD,cAAChB,EAAD,iCACf,QACI,OAAOe,EAAArD,EAAAsD,cAAChB,EAAD,eAAoBa,EAAQzC,mFAItC,IAAA6C,EAAA1B,KAAA2B,EACsB3B,KAAK4B,MAAxBN,EADHK,EACGL,QAASO,EADZF,EACYE,MACjB,OAAIA,EAAMC,QACCN,EAAArD,EAAAsD,cAACM,EAAA,EAAD,CAAUC,GAAE,YAAAC,OAAcJ,EAAMK,MAGvCV,EAAArD,EAAAsD,cAACvB,EAAD,CAAciC,SAAU,SAACtB,GACrBA,EAAEuB,iBACFV,EAAKE,MAAMtD,SAASX,EAAa+D,EAAK9D,UAEtC4D,EAAArD,EAAAsD,cAACnB,EAAD,CAAW+B,UAAU,cACjBb,EAAArD,EAAAsD,cAAA,sBACUD,EAAArD,EAAAsD,cAAA,WACND,EAAArD,EAAAsD,cAAA,SACAT,KAAK,QACLrC,KAAK,OACL2D,SAAUtC,KAAKY,qBAEnBY,EAAArD,EAAAsD,cAAA,yBACaD,EAAArD,EAAAsD,cAAA,WACbD,EAAArD,EAAAsD,cAAA,SACAT,KAAK,WACLrC,KAAK,WACL2D,SAAUtC,KAAKY,qBAEfY,EAAArD,EAAAsD,cAAA,WACAD,EAAArD,EAAAsD,cAAA,UAAQ9C,KAAK,UAAb,YAIHqB,KAAKqB,YAAYC,WAzDdiB,aA6ELC,sBARS,SAAC5E,GAErB,MAAO,CACH0D,QAFmC1D,EAAhC6E,aAGHZ,MAHmCjE,EAATiE,QAPP,SAACvD,GACxB,MAAO,CACHA,aAYOkE,CAGb7B","file":"static/js/6.a652a79b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nimport {\r\n    POST_LOGIN_REQUEST, \r\n    POST_LOGIN_SUCCESS, \r\n    POST_LOGIN_ERROR\r\n} from './../constants/constants';\r\n\r\nconst loginRequest = (state) => {\r\n    const {email, password} = state;\r\n    return async dispatch => {\r\n\r\n\r\n        //sync validate\r\n\r\n        if (!email) {\r\n            dispatch({\r\n                type: POST_LOGIN_ERROR,\r\n                payload: 'sync_email_undefined'\r\n            })\r\n            return\r\n        }\r\n        if (!password) {\r\n            dispatch({\r\n                type: POST_LOGIN_ERROR,\r\n                payload: 'sync_password_undefined'\r\n            })\r\n            return\r\n        }\r\n\r\n        //async\r\n\r\n        dispatch({\r\n            type: POST_LOGIN_REQUEST\r\n        })\r\n        axios.post('https://mysterious-reef-29460.herokuapp.com/api/v1/validate', {\r\n            email,\r\n            password\r\n        })\r\n        .then((res) => {\r\n                console.log(res);\r\n                if (res.data.status === \"ok\") {\r\n                    dispatch({\r\n                        type: POST_LOGIN_SUCCESS,\r\n                        payload: res.data.data\r\n                    })\r\n                }\r\n                else throw new Error(res.data.message)\r\n        })\r\n        .catch((err) => dispatch({\r\n            type: POST_LOGIN_ERROR,\r\n            payload: err.message\r\n        }));\r\n    }\r\n}\r\n\r\nexport default loginRequest;","import React from 'react';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport loginRequest from './../../actions/loginRequest';\r\nimport { Redirect } from 'react-router';\r\nimport styled from 'styled-components'\r\n\r\nconst LoginWrapper = styled.div`\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    display: inline-flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    background-color: #CDDC39;  \r\n`\r\nconst LoginForm = styled.form`\r\n    margin: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst LoginError = styled.div`\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    font-size: 15px;\r\n    margin: 5px 0px;\r\n`\r\n\r\nclass Login extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const {name, value} = e.target;\r\n\t    this.setState({\r\n\t      [name]: value\r\n\t    });\r\n      }\r\n      \r\n    errorHandle = (isError) => {\r\n        if (!isError.error) return '';\r\n\r\n        switch (isError.payload) {\r\n            case 'sync_email_undefined':\r\n                return <LoginError>Enter email!</LoginError>\r\n            case 'sync_password_undefined':\r\n                return <LoginError>Enter password!</LoginError>\r\n            case 'wrong_email_or_password':\r\n                    return <LoginError>Wrong email or password.</LoginError>\r\n            default: \r\n                return <LoginError>Error: {isError.payload}</LoginError>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isError, login } = this.props;\r\n        if (login.isLogin) {\r\n            return <Redirect to={`/profile/${login.id}`} />\r\n        }\r\n        return (\r\n            <LoginWrapper onSubmit={(e) => {\r\n                e.preventDefault();\r\n                this.props.dispatch(loginRequest(this.state));\r\n            }}>\r\n                <LoginForm className=\"login-form\">\r\n                    <label>\r\n                        Email <br></br>\r\n                        <input \r\n                        name=\"email\" \r\n                        type=\"text\" \r\n                        onChange={this.handleInputChange}/>\r\n                    </label>\r\n                    <label>\r\n                        Password <br></br>\r\n                    <input \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    onChange={this.handleInputChange}/>\r\n                    </label>\r\n                    <br />\r\n                    <button type=\"submit\">\r\n                        Sign in\r\n                    </button>\r\n                </LoginForm>\r\n                {this.errorHandle(isError)}\r\n            </LoginWrapper>\r\n        )    \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        dispatch\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const {loginIsError: isError, login} = state;\r\n    return {\r\n        isError,\r\n        login\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login);\r\n\r\n"],"sourceRoot":""}